databases:
  - name: mysql-db
    databaseName: laravel_phone_check # Соответствует DB_DATABASE в .env
    user: root                        # Соответствует DB_USERNAME в .env
    # Render автоматически сгенерирует безопасный пароль и предоставит его через переменную DB_PASSWORD.

services:
  - type: web
    name: phone-validator-app
    runtime: docker # Теперь используется Dockerfile
    plan: starter

    # Команды сборки: выполняются один раз при деплое.
    # Composer install выполняется внутри контейнера, где уже есть код.
    buildCommand: |
      composer install --no-dev
      php artisan key:generate --force
      php artisan migrate --force --seed # Миграции и заполнение данными

    # Команда запуска: запускает встроенный веб-сервер Laravel на порту 8000 (EXPOSE в Dockerfile).
    startCommand: php artisan serve --host=0.0.0.0 --port=8000
    healthCheckPath: /
    autoDeploy: true

    # Переменные окружения (Env Vars)
    envVars:
      # Настройки приложения
      - key: APP_KEY
        generateValue: true # Render генерирует безопасный ключ
      - key: APP_ENV
        value: production  # Установка продакшн-окружения
      - key: APP_DEBUG
        value: 'false'     # Отключение дебага
      - key: APP_URL
        fromService:
          type: web
          name: phone-validator-app
          property: host

      # Настройки базы данных (Динамические ссылки на сервис MySQL)
      - key: DB_CONNECTION
        value: mysql
      - key: DB_HOST
        fromDatabase:
          type: mysql
          name: mysql-db
          property: host
      - key: DB_DATABASE
        fromDatabase:
          type: mysql
          name: mysql-db
          property: database
      - key: DB_USERNAME
        fromDatabase:
          type: mysql
          name: mysql-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          type: mysql
          name: mysql-db
          property: password # Безопасный пароль от Render

      # Дополнительные настройки
      - key: RENDER
        value: true
      - key: SESSION_DRIVER
        value: database
      - key: QUEUE_CONNECTION
        value: database
      - key: CACHE_STORE
        value: database
